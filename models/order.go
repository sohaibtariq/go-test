/*
Package swaggerpetstoreopenapi30

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "log"
    "time"
)

type Order struct {
    Id          *int64           `json:"id,omitempty"`
    PetId       *int64           `json:"petId,omitempty"`
    Quantity    *int             `json:"quantity,omitempty"`
    ShipDate    *time.Time       `json:"shipDate,omitempty"`
    OrderStatus *OrderStatusEnum `json:"orderStatus,omitempty"`
    Complete    *bool            `json:"complete,omitempty"`
}

func (o *Order) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(o.toMap())
}

func (o *Order) toMap() map[string]any {
    structMap := make(map[string]any)
    if o.Id != nil {
        structMap["id"] = o.Id
    }
    if o.PetId != nil {
        structMap["petId"] = o.PetId
    }
    if o.Quantity != nil {
        structMap["quantity"] = o.Quantity
    }
    if o.ShipDate != nil {
        structMap["shipDate"] = o.ShipDate.Format(time.RFC3339)
    }
    if o.OrderStatus != nil {
        structMap["orderStatus"] = o.OrderStatus
    }
    if o.Complete != nil {
        structMap["complete"] = o.Complete
    }
    return structMap
}

func (o *Order) UnmarshalJSON(input []byte) error {
    temp := &struct {
        Id          *int64           `json:"id,omitempty"`
        PetId       *int64           `json:"petId,omitempty"`
        Quantity    *int             `json:"quantity,omitempty"`
        ShipDate    *string          `json:"shipDate,omitempty"`
        OrderStatus *OrderStatusEnum `json:"orderStatus,omitempty"`
        Complete    *bool            `json:"complete,omitempty"`
    }{}
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    o.Id = temp.Id
    o.PetId = temp.PetId
    o.Quantity = temp.Quantity
    if temp.ShipDate != nil {
        ShipDateVal, err := time.Parse(time.RFC3339, *temp.ShipDate)
        if err != nil {
            log.Fatalf("Cannot Parse shipDate as % s format.", time.RFC3339)
        }
        o.ShipDate = &ShipDateVal
    }
    o.OrderStatus = temp.OrderStatus
    o.Complete = temp.Complete
    return nil
}
